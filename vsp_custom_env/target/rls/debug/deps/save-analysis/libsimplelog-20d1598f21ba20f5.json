{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6","program":"/home/cb/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","simplelog","--edition=2018","/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"term\"","-C","metadata=20d1598f21ba20f5","-C","extra-filename=-20d1598f21ba20f5","--out-dir","/home/cb/PycharmProjects/masterarbeit_cpu/vsp_custom_env/target/rls/debug/deps","-L","dependency=/home/cb/PycharmProjects/masterarbeit_cpu/vsp_custom_env/target/rls/debug/deps","--extern","chrono=/home/cb/PycharmProjects/masterarbeit_cpu/vsp_custom_env/target/rls/debug/deps/libchrono-a0656ae707e7a9b9.rmeta","--extern","log=/home/cb/PycharmProjects/masterarbeit_cpu/vsp_custom_env/target/rls/debug/deps/liblog-fbe57397162df1aa.rmeta","--extern","term=/home/cb/PycharmProjects/masterarbeit_cpu/vsp_custom_env/target/rls/debug/deps/libterm-114b474760eb677c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/cb/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/cb/PycharmProjects/masterarbeit_cpu/vsp_custom_env/target/rls/debug/deps/libsimplelog-20d1598f21ba20f5.rmeta"},"prelude":{"crate_id":{"name":"simplelog","disambiguator":[16118026988641830863,1293442377843322640]},"crate_root":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src","external_crates":[{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[526428811945659246,13385786431852093568]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[4150165762619742282,10084428854705346699]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17154149902455954331,10787439630250540476]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[3551889228217061522,18098948565341830907]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[616005194320102788,15921775685612583979]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4310295892305589745,11285303825786314436]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3247569189967614495,15966786433993657917]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15680994173287911211,8587509387955096358]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[11719660851090472004,3429704230356133145]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17594861313346837805,7275947389262704147]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11399954785695891892,14851098529173350963]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[12494985972155115308,9730871930189483612]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15532488949252110002,6117296861090759943]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[1804911290426314532,6689449841577915250]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[8479710970850627223,6852362994577870122]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[12659285667184348883,16807697831197910537]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3876717150818575906,15525448869101162932]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","num":18,"id":{"name":"log","disambiguator":[15532744713042731074,4797116992054534720]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","num":19,"id":{"name":"cfg_if","disambiguator":[3051334588151808042,8832791441195491324]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","num":20,"id":{"name":"chrono","disambiguator":[9264717162877669159,15818728824009526357]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","num":21,"id":{"name":"time","disambiguator":[5632395981660890668,3758087195342918198]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","num":22,"id":{"name":"libc","disambiguator":[9372850509452784096,13876540402038093207]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","num":23,"id":{"name":"num_integer","disambiguator":[9895017762654667313,13528627114746164437]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","num":24,"id":{"name":"num_traits","disambiguator":[10285195072970654542,14886035359600786263]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","num":25,"id":{"name":"term","disambiguator":[15303750325896469649,17071160896545115778]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","num":26,"id":{"name":"dirs","disambiguator":[2863378544124974480,2755215670463110339]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","num":27,"id":{"name":"cfg_if","disambiguator":[16922299986880566257,13884822903667121708]}},{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","num":28,"id":{"name":"dirs_sys","disambiguator":[13848085031094348355,7724267195993834860]}}],"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":334,"byte_end":10478,"line_start":8,"line_end":282,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":519},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1237,"byte_end":1243,"line_start":27,"line_end":27,"column_start":24,"column_end":30},"alias_span":null,"name":"Config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":537},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1245,"byte_end":1258,"line_start":27,"line_end":27,"column_start":32,"column_end":45},"alias_span":null,"name":"ConfigBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":478},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1260,"byte_end":1272,"line_start":27,"line_end":27,"column_start":47,"column_end":59},"alias_span":null,"name":"LevelPadding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":490},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1274,"byte_end":1287,"line_start":27,"line_end":27,"column_start":61,"column_end":74},"alias_span":null,"name":"ThreadPadding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":504},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1289,"byte_end":1302,"line_start":27,"line_end":27,"column_start":76,"column_end":89},"alias_span":null,"name":"ThreadLogMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":98},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1389,"byte_end":1403,"line_start":30,"line_end":30,"column_start":25,"column_end":39},"alias_span":null,"name":"CombinedLogger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":211},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1405,"byte_end":1417,"line_start":30,"line_end":30,"column_start":41,"column_end":53},"alias_span":null,"name":"SimpleLogger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":390},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1419,"byte_end":1430,"line_start":30,"line_end":30,"column_start":55,"column_end":66},"alias_span":null,"name":"WriteLogger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":544},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1482,"byte_end":1494,"line_start":32,"line_end":32,"column_start":25,"column_end":37},"alias_span":null,"name":"TermLogError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":326},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1496,"byte_end":1506,"line_start":32,"line_end":32,"column_start":39,"column_end":49},"alias_span":null,"name":"TermLogger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":552},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1508,"byte_end":1520,"line_start":32,"line_end":32,"column_start":51,"column_end":63},"alias_span":null,"name":"TerminalMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":195},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1538,"byte_end":1543,"line_start":34,"line_end":34,"column_start":15,"column_end":20},"alias_span":null,"name":"Level","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":216},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1545,"byte_end":1556,"line_start":34,"line_end":34,"column_start":22,"column_end":33},"alias_span":null,"name":"LevelFilter","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":334,"byte_end":10478,"line_start":8,"line_end":282,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":67},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":471},{"krate":0,"index":474}],"decl_id":null,"docs":"\n `simplelog` provides a series of logging facilities, that can be easily combined.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":334,"byte_end":337,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `simplelog` provides a series of logging facilities, that can be easily combined.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":338,"byte_end":423,"line_start":9,"line_end":9,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":424,"byte_end":427,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ - `SimpleLogger` (very basic logger that logs to stdout)","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":428,"byte_end":488,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/ - `TermLogger` (advanced terminal logger, that splits to stdout/err and has color support) (can be excluded on unsupported platforms)","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":489,"byte_end":626,"line_start":12,"line_end":12,"column_start":1,"column_end":138}},{"value":"/ - `WriteLogger` (logs to a given struct implementing `Write`, e.g. a file)","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":627,"byte_end":705,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ - `CombinedLogger` (can be used to form combinations of the above loggers)","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":706,"byte_end":784,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ - `TestLogger` (specialized logger for tests. Uses print!() / println!() for tests to be able to capture the output)","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":785,"byte_end":905,"line_start":15,"line_end":15,"column_start":1,"column_end":121}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":906,"byte_end":909,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Only one Logger should be initialized of the start of your program","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":910,"byte_end":980,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ through the `Logger::init(...)` method. For the actual calling syntax","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":981,"byte_end":1054,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ take a look at the documentation of the specific implementation(s) you wanna use.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1055,"byte_end":1140,"line_start":19,"line_end":19,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1141,"byte_end":1144,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"deny(missing_docs, rust_2018_idioms)","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1146,"byte_end":1186,"line_start":22,"line_end":22,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":479},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":10734,"byte_end":10738,"line_start":10,"line_end":10,"column_start":5,"column_end":9},"name":"Left","qualname":"::config::LevelPadding::Left","value":"LevelPadding::Left","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" Add spaces on the left side\n","sig":null,"attributes":[{"value":"/ Add spaces on the left side","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":10698,"byte_end":10729,"line_start":9,"line_end":9,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":481},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":10781,"byte_end":10786,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"Right","qualname":"::config::LevelPadding::Right","value":"LevelPadding::Right","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" Add spaces on the right side\n","sig":null,"attributes":[{"value":"/ Add spaces on the right side","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":10744,"byte_end":10776,"line_start":11,"line_end":11,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":483},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":10821,"byte_end":10824,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"Off","qualname":"::config::LevelPadding::Off","value":"LevelPadding::Off","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" Do not pad the level\n","sig":null,"attributes":[{"value":"/ Do not pad the level","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":10792,"byte_end":10816,"line_start":13,"line_end":13,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":478},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":10679,"byte_end":10691,"line_start":8,"line_end":8,"column_start":10,"column_end":22},"name":"LevelPadding","qualname":"::config::LevelPadding","value":"pub enum LevelPadding { Left, Right, Off, }","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":483}],"decl_id":null,"docs":" Padding to be used for logging the level\n","sig":null,"attributes":[{"value":"/ Padding to be used for logging the level","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":10625,"byte_end":10669,"line_start":7,"line_end":7,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":491},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":10996,"byte_end":11000,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Left","qualname":"::config::ThreadPadding::Left","value":"ThreadPadding::Left(usize)","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Add spaces on the left side, up to usize many\n","sig":null,"attributes":[{"value":"/ Add spaces on the left side, up to usize many","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":10942,"byte_end":10991,"line_start":20,"line_end":20,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":494},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":11068,"byte_end":11073,"line_start":23,"line_end":23,"column_start":5,"column_end":10},"name":"Right","qualname":"::config::ThreadPadding::Right","value":"ThreadPadding::Right(usize)","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Add spaces on the right side, up to usize many\n","sig":null,"attributes":[{"value":"/ Add spaces on the right side, up to usize many","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":11013,"byte_end":11063,"line_start":22,"line_end":22,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":497},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":11124,"byte_end":11127,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"Off","qualname":"::config::ThreadPadding::Off","value":"ThreadPadding::Off","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Do not pad the thread id/name\n","sig":null,"attributes":[{"value":"/ Do not pad the thread id/name","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":11086,"byte_end":11119,"line_start":24,"line_end":24,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":490},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":10922,"byte_end":10935,"line_start":19,"line_end":19,"column_start":10,"column_end":23},"name":"ThreadPadding","qualname":"::config::ThreadPadding","value":"pub enum ThreadPadding { Left(usize), Right(usize), Off, }","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":497}],"decl_id":null,"docs":" Padding to be used for logging the thread id/name\n","sig":null,"attributes":[{"value":"/ Padding to be used for logging the thread id/name","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":10859,"byte_end":10912,"line_start":18,"line_end":18,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":505},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":11282,"byte_end":11285,"line_start":32,"line_end":32,"column_start":5,"column_end":8},"name":"IDs","qualname":"::config::ThreadLogMode::IDs","value":"ThreadLogMode::IDs","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" Log thread ids only\n","sig":null,"attributes":[{"value":"/ Log thread ids only","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":11254,"byte_end":11277,"line_start":31,"line_end":31,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":507},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":11325,"byte_end":11330,"line_start":34,"line_end":34,"column_start":5,"column_end":10},"name":"Names","qualname":"::config::ThreadLogMode::Names","value":"ThreadLogMode::Names","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" Log the thread names only\n","sig":null,"attributes":[{"value":"/ Log the thread names only","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":11291,"byte_end":11320,"line_start":33,"line_end":33,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":509},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":11413,"byte_end":11417,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"Both","qualname":"::config::ThreadLogMode::Both","value":"ThreadLogMode::Both","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" If this thread is named, log the name. Otherwise, log the thread id.\n","sig":null,"attributes":[{"value":"/ If this thread is named, log the name. Otherwise, log the thread id.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":11336,"byte_end":11408,"line_start":35,"line_end":35,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":504},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":11234,"byte_end":11247,"line_start":30,"line_end":30,"column_start":10,"column_end":23},"name":"ThreadLogMode","qualname":"::config::ThreadLogMode","value":"pub enum ThreadLogMode { IDs, Names, Both, }","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":509}],"decl_id":null,"docs":" Mode for logging the thread name or id or both.\n","sig":null,"attributes":[{"value":"/ Mode for logging the thread name or id or both.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":11173,"byte_end":11224,"line_start":29,"line_end":29,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":519},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":11840,"byte_end":11846,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"Config","qualname":"::config::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532}],"decl_id":null,"docs":" Configuration for the Loggers","sig":null,"attributes":[{"value":"/ Configuration for the Loggers","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":11422,"byte_end":11455,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":11456,"byte_end":11459,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ All loggers print the message in the following form:","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":11460,"byte_end":11516,"line_start":41,"line_end":41,"column_start":1,"column_end":57}},{"value":"/ `00:00:00 [LEVEL] crate::module: [lib.rs::100] your_message`","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":11517,"byte_end":11581,"line_start":42,"line_end":42,"column_start":1,"column_end":65}},{"value":"/ Every space delimited part except the actual message is optional.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":11582,"byte_end":11651,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":11652,"byte_end":11655,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Pass this struct to your logger to change when these information shall","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":11656,"byte_end":11730,"line_start":45,"line_end":45,"column_start":1,"column_end":75}},{"value":"/ be logged.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":11731,"byte_end":11745,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":11746,"byte_end":11749,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Construct using `Default` or using `ConfigBuilder`","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":11750,"byte_end":11804,"line_start":48,"line_end":48,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":537},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":13134,"byte_end":13147,"line_start":80,"line_end":80,"column_start":12,"column_end":25},"name":"ConfigBuilder","qualname":"::config::ConfigBuilder","value":"","parent":null,"children":[],"decl_id":null,"docs":" Builder for the Logger Confogurations (`Config`)","sig":null,"attributes":[{"value":"/ Builder for the Logger Confogurations (`Config`)","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":12418,"byte_end":12470,"line_start":66,"line_end":66,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":12471,"byte_end":12474,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ All loggers print the message in the following form:","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":12475,"byte_end":12531,"line_start":68,"line_end":68,"column_start":1,"column_end":57}},{"value":"/ `00:00:00 [LEVEL] crate::module: [lib.rs::100] your_message`","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":12532,"byte_end":12596,"line_start":69,"line_end":69,"column_start":1,"column_end":65}},{"value":"/ Every space delimited part except the actual message is optional.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":12597,"byte_end":12666,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":12667,"byte_end":12670,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Use this struct to create a custom `Config` changing when these information shall","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":12671,"byte_end":12756,"line_start":72,"line_end":72,"column_start":1,"column_end":86}},{"value":"/ be logged. Every part can be enabled for a specific Level and is then","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":12757,"byte_end":12830,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ automatically enable for all lower levels as well.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":12831,"byte_end":12885,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":12886,"byte_end":12889,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ The Result is that the logging gets more detailed the more verbose it gets.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":12890,"byte_end":12969,"line_start":76,"line_end":76,"column_start":1,"column_end":80}},{"value":"/ E.g. to have one part shown always use `Level::Error`. But if you","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":12970,"byte_end":13039,"line_start":77,"line_end":77,"column_start":1,"column_end":70}},{"value":"/ want to show the source line only on `Trace` use that.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":13040,"byte_end":13098,"line_start":78,"line_end":78,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":13233,"byte_end":13236,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"new","qualname":"<ConfigBuilder>::new","value":"pub fn new() -> ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create a new default ConfigBuilder\n","sig":null,"attributes":[{"value":"/ Create a new default ConfigBuilder","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":13183,"byte_end":13221,"line_start":83,"line_end":83,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":13406,"byte_end":13419,"line_start":89,"line_end":89,"column_start":12,"column_end":25},"name":"set_max_level","qualname":"<ConfigBuilder>::set_max_level","value":"pub fn set_max_level<'a>(&'a mut Self, LevelFilter) -> &'a mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set at which level and below the level itself shall be logged (default is Error)\n","sig":null,"attributes":[{"value":"/ Set at which level and below the level itself shall be logged (default is Error)","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":13310,"byte_end":13394,"line_start":88,"line_end":88,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":13635,"byte_end":13649,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"name":"set_time_level","qualname":"<ConfigBuilder>::set_time_level","value":"pub fn set_time_level<'a>(&'a mut Self, LevelFilter) -> &'a mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set at which level and below the current time shall be logged (default is Error)\n","sig":null,"attributes":[{"value":"/ Set at which level and below the current time shall be logged (default is Error)","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":13539,"byte_end":13623,"line_start":94,"line_end":94,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":13860,"byte_end":13876,"line_start":101,"line_end":101,"column_start":12,"column_end":28},"name":"set_thread_level","qualname":"<ConfigBuilder>::set_thread_level","value":"pub fn set_thread_level<'a>(&'a mut Self, LevelFilter)\n-> &'a mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set at which level and below the thread id shall be logged. (default is Debug)\n","sig":null,"attributes":[{"value":"/ Set at which level and below the thread id shall be logged. (default is Debug)","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":13766,"byte_end":13848,"line_start":100,"line_end":100,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":14090,"byte_end":14106,"line_start":107,"line_end":107,"column_start":12,"column_end":28},"name":"set_target_level","qualname":"<ConfigBuilder>::set_target_level","value":"pub fn set_target_level<'a>(&'a mut Self, LevelFilter)\n-> &'a mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set at which level and below the target shall be logged. (default is Debug)\n","sig":null,"attributes":[{"value":"/ Set at which level and below the target shall be logged. (default is Debug)","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":13999,"byte_end":14078,"line_start":106,"line_end":106,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":14332,"byte_end":14350,"line_start":113,"line_end":113,"column_start":12,"column_end":30},"name":"set_location_level","qualname":"<ConfigBuilder>::set_location_level","value":"pub fn set_location_level<'a>(&'a mut Self, LevelFilter)\n-> &'a mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set at which level and below a source code reference shall be logged (default is Trace)\n","sig":null,"attributes":[{"value":"/ Set at which level and below a source code reference shall be logged (default is Trace)","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":14229,"byte_end":14320,"line_start":112,"line_end":112,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":14562,"byte_end":14579,"line_start":119,"line_end":119,"column_start":12,"column_end":29},"name":"set_level_padding","qualname":"<ConfigBuilder>::set_level_padding","value":"pub fn set_level_padding<'a>(&'a mut Self, LevelPadding)\n-> &'a mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set how the levels should be padded, when logging (default is Left)\n","sig":null,"attributes":[{"value":"/ Set how the levels should be padded, when logging (default is Left)","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":14479,"byte_end":14550,"line_start":118,"line_end":118,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":14763,"byte_end":14781,"line_start":125,"line_end":125,"column_start":12,"column_end":30},"name":"set_thread_padding","qualname":"<ConfigBuilder>::set_thread_padding","value":"pub fn set_thread_padding<'a>(&'a mut Self, ThreadPadding)\n-> &'a mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set how the thread should be padded\n","sig":null,"attributes":[{"value":"/ Set how the thread should be padded","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":14712,"byte_end":14751,"line_start":124,"line_end":124,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":14967,"byte_end":14982,"line_start":131,"line_end":131,"column_start":12,"column_end":27},"name":"set_thread_mode","qualname":"<ConfigBuilder>::set_thread_mode","value":"pub fn set_thread_mode<'a>(&'a mut Self, ThreadLogMode)\n-> &'a mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the mode for logging the thread\n","sig":null,"attributes":[{"value":"/ Set the mode for logging the thread","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":14916,"byte_end":14955,"line_start":130,"line_end":130,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":15271,"byte_end":15290,"line_start":139,"line_end":139,"column_start":12,"column_end":31},"name":"set_time_format_str","qualname":"<ConfigBuilder>::set_time_format_str","value":"pub fn set_time_format_str<'a>(&'a mut Self, &'static str)\n-> &'a mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set time chrono [strftime] format string.","sig":null,"attributes":[{"value":"/ Set time chrono [strftime] format string.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":15112,"byte_end":15157,"line_start":136,"line_end":136,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":15162,"byte_end":15165,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ [strftime]: https://docs.rs/chrono/0.4.0/chrono/format/strftime/index.html#specifiers","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":15170,"byte_end":15259,"line_start":138,"line_end":138,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":15626,"byte_end":15641,"line_start":150,"line_end":150,"column_start":12,"column_end":27},"name":"set_time_format","qualname":"<ConfigBuilder>::set_time_format","value":"pub fn set_time_format<'a>(&'a mut Self, String) -> &'a mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set time chrono [strftime] format string.","sig":null,"attributes":[{"value":"/ Set time chrono [strftime] format string.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":15467,"byte_end":15512,"line_start":147,"line_end":147,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":15517,"byte_end":15520,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ [strftime]: https://docs.rs/chrono/0.4.0/chrono/format/strftime/index.html#specifiers","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":15525,"byte_end":15614,"line_start":149,"line_end":149,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":15849,"byte_end":15864,"line_start":156,"line_end":156,"column_start":12,"column_end":27},"name":"set_time_offset","qualname":"<ConfigBuilder>::set_time_offset","value":"pub fn set_time_offset<'a>(&'a mut Self, FixedOffset) -> &'a mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set offset used for logging time (default is 0)\n","sig":null,"attributes":[{"value":"/ Set offset used for logging time (default is 0)","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":15786,"byte_end":15837,"line_start":155,"line_end":155,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":16074,"byte_end":16091,"line_start":162,"line_end":162,"column_start":12,"column_end":29},"name":"set_time_to_local","qualname":"<ConfigBuilder>::set_time_to_local","value":"pub fn set_time_to_local<'a>(&'a mut Self, bool) -> &'a mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" set if you log in local timezone or UTC (default is UTC)\n","sig":null,"attributes":[{"value":"/ set if you log in local timezone or UTC (default is UTC)","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":16002,"byte_end":16062,"line_start":161,"line_end":161,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":16488,"byte_end":16508,"line_start":171,"line_end":171,"column_start":12,"column_end":32},"name":"add_filter_allow_str","qualname":"<ConfigBuilder>::add_filter_allow_str","value":"pub fn add_filter_allow_str<'a>(&'a mut Self, &'static str)\n-> &'a mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Add allowed module filters.\n If any are specified, only records from modules starting with one of these entries will be printed","sig":null,"attributes":[{"value":"/ Add allowed module filters.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":16209,"byte_end":16240,"line_start":167,"line_end":167,"column_start":5,"column_end":36}},{"value":"/ If any are specified, only records from modules starting with one of these entries will be printed","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":16245,"byte_end":16347,"line_start":168,"line_end":168,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":16352,"byte_end":16355,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ For example, `add_filter_allow_str(\"tokio::uds\")` would allow only logging from the `tokio` crates `uds` module.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":16360,"byte_end":16476,"line_start":170,"line_end":170,"column_start":5,"column_end":121}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":17073,"byte_end":17089,"line_start":185,"line_end":185,"column_start":12,"column_end":28},"name":"add_filter_allow","qualname":"<ConfigBuilder>::add_filter_allow","value":"pub fn add_filter_allow<'a>(&'a mut Self, String) -> &'a mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Add allowed module filters.\n If any are specified, only records from modules starting with one of these entries will be printed","sig":null,"attributes":[{"value":"/ Add allowed module filters.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":16780,"byte_end":16811,"line_start":181,"line_end":181,"column_start":5,"column_end":36}},{"value":"/ If any are specified, only records from modules starting with one of these entries will be printed","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":16816,"byte_end":16918,"line_start":182,"line_end":182,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":16923,"byte_end":16926,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ For example, `add_filter_allow(format!(\"{}{}\",\"tokio\", \"uds\"))` would allow only logging from the `tokio` crates `uds` module.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":16931,"byte_end":17061,"line_start":184,"line_end":184,"column_start":5,"column_end":135}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":17429,"byte_end":17447,"line_start":194,"line_end":194,"column_start":12,"column_end":30},"name":"clear_filter_allow","qualname":"<ConfigBuilder>::clear_filter_allow","value":"pub fn clear_filter_allow<'a>(&'a mut Self) -> &'a mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Clear allowed module filters.\n If none are specified, nothing is filtered out\n","sig":null,"attributes":[{"value":"/ Clear allowed module filters.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":17329,"byte_end":17362,"line_start":192,"line_end":192,"column_start":5,"column_end":38}},{"value":"/ If none are specified, nothing is filtered out","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":17367,"byte_end":17417,"line_start":193,"line_end":193,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":17835,"byte_end":17856,"line_start":203,"line_end":203,"column_start":12,"column_end":33},"name":"add_filter_ignore_str","qualname":"<ConfigBuilder>::add_filter_ignore_str","value":"pub fn add_filter_ignore_str<'a>(&'a mut Self, &'static str)\n-> &'a mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Add denied module filters.\n If any are specified, records from modules starting with one of these entries will be ignored","sig":null,"attributes":[{"value":"/ Add denied module filters.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":17567,"byte_end":17597,"line_start":199,"line_end":199,"column_start":5,"column_end":35}},{"value":"/ If any are specified, records from modules starting with one of these entries will be ignored","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":17602,"byte_end":17699,"line_start":200,"line_end":200,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":17704,"byte_end":17707,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ For example, `add_filter_ignore_str(\"tokio::uds\")` would deny logging from the `tokio` crates `uds` module.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":17712,"byte_end":17823,"line_start":202,"line_end":202,"column_start":5,"column_end":116}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":18412,"byte_end":18429,"line_start":217,"line_end":217,"column_start":12,"column_end":29},"name":"add_filter_ignore","qualname":"<ConfigBuilder>::add_filter_ignore","value":"pub fn add_filter_ignore<'a>(&'a mut Self, String) -> &'a mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Add denied module filters.\n If any are specified, records from modules starting with one of these entries will be ignored","sig":null,"attributes":[{"value":"/ Add denied module filters.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":18130,"byte_end":18160,"line_start":213,"line_end":213,"column_start":5,"column_end":35}},{"value":"/ If any are specified, records from modules starting with one of these entries will be ignored","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":18165,"byte_end":18262,"line_start":214,"line_end":214,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":18267,"byte_end":18270,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ For example, `add_filter_ignore(format!(\"{}{}\",\"tokio\", \"uds\"))` would deny logging from the `tokio` crates `uds` module.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":18275,"byte_end":18400,"line_start":216,"line_end":216,"column_start":5,"column_end":130}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":18766,"byte_end":18785,"line_start":226,"line_end":226,"column_start":12,"column_end":31},"name":"clear_filter_ignore","qualname":"<ConfigBuilder>::clear_filter_ignore","value":"pub fn clear_filter_ignore<'a>(&'a mut Self) -> &'a mut ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Clear ignore module filters.\n If none are specified, nothing is filtered\n","sig":null,"attributes":[{"value":"/ Clear ignore module filters.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":18671,"byte_end":18703,"line_start":224,"line_end":224,"column_start":5,"column_end":37}},{"value":"/ If none are specified, nothing is filtered","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":18708,"byte_end":18754,"line_start":225,"line_end":225,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":18940,"byte_end":18945,"line_start":232,"line_end":232,"column_start":12,"column_end":17},"name":"build","qualname":"<ConfigBuilder>::build","value":"pub fn build(&mut Self) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Build new `Config`\n","sig":null,"attributes":[{"value":"/ Build new `Config`","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":18906,"byte_end":18928,"line_start":231,"line_end":231,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":98},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":20763,"byte_end":20777,"line_start":16,"line_end":16,"column_start":12,"column_end":26},"name":"CombinedLogger","qualname":"::loggers::comblog::CombinedLogger","value":"CombinedLogger {  }","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100}],"decl_id":null,"docs":" The CombinedLogger struct. Provides a Logger implementation that proxies multiple Loggers as one.","sig":null,"attributes":[{"value":"/ The CombinedLogger struct. Provides a Logger implementation that proxies multiple Loggers as one.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":20582,"byte_end":20683,"line_start":13,"line_end":13,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":20684,"byte_end":20687,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The purpose is to allow multiple Loggers to be set globally","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":20688,"byte_end":20751,"line_start":15,"line_end":15,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":21962,"byte_end":21966,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"init","qualname":"<CombinedLogger>::init","value":"pub fn init(Vec<Box<dyn SharedLogger>>) -> Result<(), SetLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" init function. Globally initializes the CombinedLogger as the one and only used log facility.","sig":null,"attributes":[{"value":"/ init function. Globally initializes the CombinedLogger as the one and only used log facility.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":20873,"byte_end":20970,"line_start":22,"line_end":22,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":20975,"byte_end":20978,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Takes all used Loggers as a Vector argument. None of those Loggers should already be set globally.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":20983,"byte_end":21085,"line_start":24,"line_end":24,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":21090,"byte_end":21093,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ All loggers need to implement `log::Log` and `logger::SharedLogger` and need to provide a way to be","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":21098,"byte_end":21201,"line_start":26,"line_end":26,"column_start":5,"column_end":108}},{"value":"/ initialized without calling `set_logger`. All loggers of this library provide a `new(..)`` method","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":21206,"byte_end":21307,"line_start":27,"line_end":27,"column_start":5,"column_end":106}},{"value":"/ for that purpose.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":21312,"byte_end":21333,"line_start":28,"line_end":28,"column_start":5,"column_end":26}},{"value":"/ Fails if another logger is already set globally.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":21338,"byte_end":21390,"line_start":29,"line_end":29,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":21395,"byte_end":21398,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":21403,"byte_end":21417,"line_start":31,"line_end":31,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":21422,"byte_end":21429,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ # extern crate simplelog;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":21434,"byte_end":21463,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/ # use simplelog::*;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":21468,"byte_end":21491,"line_start":34,"line_end":34,"column_start":5,"column_end":28}},{"value":"/ # use std::fs::File;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":21496,"byte_end":21520,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ # fn main() {","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":21525,"byte_end":21542,"line_start":36,"line_end":36,"column_start":5,"column_end":22}},{"value":"/ let _ = CombinedLogger::init(","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":21547,"byte_end":21580,"line_start":37,"line_end":37,"column_start":5,"column_end":38}},{"value":"/             vec![","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":21585,"byte_end":21606,"line_start":38,"line_end":38,"column_start":5,"column_end":26}},{"value":"/ #               #[cfg(feature = \"term\")]","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":21611,"byte_end":21655,"line_start":39,"line_end":39,"column_start":5,"column_end":49}},{"value":"/                 TermLogger::new(LevelFilter::Info, Config::default(), TerminalMode::Mixed).unwrap(),","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":21660,"byte_end":21764,"line_start":40,"line_end":40,"column_start":5,"column_end":109}},{"value":"/                 WriteLogger::new(LevelFilter::Info, Config::default(), File::create(\"my_rust_bin.log\").unwrap())","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":21769,"byte_end":21885,"line_start":41,"line_end":41,"column_start":5,"column_end":121}},{"value":"/             ]","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":21890,"byte_end":21907,"line_start":42,"line_end":42,"column_start":5,"column_end":22}},{"value":"/         );","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":21912,"byte_end":21926,"line_start":43,"line_end":43,"column_start":5,"column_end":19}},{"value":"/ # }","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":21931,"byte_end":21938,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":21943,"byte_end":21950,"line_start":45,"line_end":45,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":23241,"byte_end":23244,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<CombinedLogger>::new","value":"pub fn new(Vec<Box<dyn SharedLogger>>) -> Box<CombinedLogger>","parent":null,"children":[],"decl_id":null,"docs":" allows to create a new logger, that can be independently used, no matter whats globally set.","sig":null,"attributes":[{"value":"/ allows to create a new logger, that can be independently used, no matter whats globally set.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":22171,"byte_end":22267,"line_start":52,"line_end":52,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":22272,"byte_end":22275,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ no macros are provided for this case and you probably","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":22280,"byte_end":22337,"line_start":54,"line_end":54,"column_start":5,"column_end":62}},{"value":"/ dont want to use this function, but `init()`, if you dont want to build a `CombinedLogger`.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":22342,"byte_end":22437,"line_start":55,"line_end":55,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":22442,"byte_end":22445,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Takes all used loggers as a Vector argument. The log level is automatically determined by the","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":22450,"byte_end":22547,"line_start":57,"line_end":57,"column_start":5,"column_end":102}},{"value":"/ lowest log level used by the given loggers.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":22552,"byte_end":22599,"line_start":58,"line_end":58,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":22604,"byte_end":22607,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ All loggers need to implement log::Log.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":22612,"byte_end":22655,"line_start":60,"line_end":60,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":22660,"byte_end":22663,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":22668,"byte_end":22682,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":22687,"byte_end":22694,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ # extern crate simplelog;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":22699,"byte_end":22728,"line_start":64,"line_end":64,"column_start":5,"column_end":34}},{"value":"/ # use simplelog::*;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":22733,"byte_end":22756,"line_start":65,"line_end":65,"column_start":5,"column_end":28}},{"value":"/ # use std::fs::File;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":22761,"byte_end":22785,"line_start":66,"line_end":66,"column_start":5,"column_end":29}},{"value":"/ # fn main() {","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":22790,"byte_end":22807,"line_start":67,"line_end":67,"column_start":5,"column_end":22}},{"value":"/ let combined_logger = CombinedLogger::new(","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":22812,"byte_end":22858,"line_start":68,"line_end":68,"column_start":5,"column_end":51}},{"value":"/             vec![","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":22863,"byte_end":22884,"line_start":69,"line_end":69,"column_start":5,"column_end":26}},{"value":"/ #               #[cfg(feature = \"term\")]","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":22889,"byte_end":22933,"line_start":70,"line_end":70,"column_start":5,"column_end":49}},{"value":"/                 TermLogger::new(LevelFilter::Debug, Config::default(), TerminalMode::Mixed).unwrap(),","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":22938,"byte_end":23043,"line_start":71,"line_end":71,"column_start":5,"column_end":110}},{"value":"/                 WriteLogger::new(LevelFilter::Info, Config::default(), File::create(\"my_rust_bin.log\").unwrap())","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":23048,"byte_end":23164,"line_start":72,"line_end":72,"column_start":5,"column_end":121}},{"value":"/             ]","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":23169,"byte_end":23186,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/         );","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":23191,"byte_end":23205,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/ # }","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":23210,"byte_end":23217,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":23222,"byte_end":23229,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":211},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":30009,"byte_end":30021,"line_start":19,"line_end":19,"column_start":12,"column_end":24},"name":"SimpleLogger","qualname":"::loggers::simplelog::SimpleLogger","value":"SimpleLogger {  }","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214}],"decl_id":null,"docs":" The SimpleLogger struct. Provides a very basic Logger implementation\n","sig":null,"attributes":[{"value":"/ The SimpleLogger struct. Provides a very basic Logger implementation","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":29925,"byte_end":29997,"line_start":18,"line_end":18,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":30610,"byte_end":30614,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"init","qualname":"<SimpleLogger>::init","value":"pub fn init(LevelFilter, Config) -> Result<(), SetLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" init function. Globally initializes the SimpleLogger as the one and only used log facility.","sig":null,"attributes":[{"value":"/ init function. Globally initializes the SimpleLogger as the one and only used log facility.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":30123,"byte_end":30218,"line_start":26,"line_end":26,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":30223,"byte_end":30226,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Takes the desired `Level` and `Config` as arguments. They cannot be changed later on.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":30231,"byte_end":30320,"line_start":28,"line_end":28,"column_start":5,"column_end":94}},{"value":"/ Fails if another Logger was already initialized.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":30325,"byte_end":30377,"line_start":29,"line_end":29,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":30382,"byte_end":30385,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":30390,"byte_end":30404,"line_start":31,"line_end":31,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":30409,"byte_end":30416,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ # extern crate simplelog;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":30421,"byte_end":30450,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/ # use simplelog::*;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":30455,"byte_end":30478,"line_start":34,"line_end":34,"column_start":5,"column_end":28}},{"value":"/ # fn main() {","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":30483,"byte_end":30500,"line_start":35,"line_end":35,"column_start":5,"column_end":22}},{"value":"/ let _ = SimpleLogger::init(LevelFilter::Info, Config::default());","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":30505,"byte_end":30574,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ # }","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":30579,"byte_end":30586,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":30591,"byte_end":30598,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":31417,"byte_end":31420,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<SimpleLogger>::new","value":"pub fn new(LevelFilter, Config) -> Box<SimpleLogger>","parent":null,"children":[],"decl_id":null,"docs":" allows to create a new logger, that can be independently used, no matter what is globally set.","sig":null,"attributes":[{"value":"/ allows to create a new logger, that can be independently used, no matter what is globally set.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":30803,"byte_end":30901,"line_start":44,"line_end":44,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":30906,"byte_end":30909,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ no macros are provided for this case and you probably","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":30914,"byte_end":30971,"line_start":46,"line_end":46,"column_start":5,"column_end":62}},{"value":"/ dont want to use this function, but `init()`, if you dont want to build a `CombinedLogger`.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":30976,"byte_end":31071,"line_start":47,"line_end":47,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":31076,"byte_end":31079,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Takes the desired `Level` and `Config` as arguments. They cannot be changed later on.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":31084,"byte_end":31173,"line_start":49,"line_end":49,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":31178,"byte_end":31181,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":31186,"byte_end":31200,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":31205,"byte_end":31212,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ # extern crate simplelog;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":31217,"byte_end":31246,"line_start":53,"line_end":53,"column_start":5,"column_end":34}},{"value":"/ # use simplelog::*;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":31251,"byte_end":31274,"line_start":54,"line_end":54,"column_start":5,"column_end":28}},{"value":"/ # fn main() {","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":31279,"byte_end":31296,"line_start":55,"line_end":55,"column_start":5,"column_end":22}},{"value":"/ let simple_logger = SimpleLogger::new(LevelFilter::Info, Config::default());","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":31301,"byte_end":31381,"line_start":56,"line_end":56,"column_start":5,"column_end":85}},{"value":"/ # }","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":31386,"byte_end":31393,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":31398,"byte_end":31405,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":545},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":33343,"byte_end":33352,"line_start":22,"line_end":22,"column_start":5,"column_end":14},"name":"SetLogger","qualname":"::loggers::termlog::TermLogError::SetLogger","value":"TermLogError::SetLogger(SetLoggerError)","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":"The type returned by set_logger if set_logger has already been called.\n","sig":null,"attributes":[{"value":"/The type returned by set_logger if set_logger has already been called.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":33265,"byte_end":33338,"line_start":21,"line_end":21,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":548},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":33604,"byte_end":33608,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Term","qualname":"::loggers::termlog::TermLogError::Term","value":"TermLogError::Term","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":"TermLogger initialization might also fail if stdout or stderr could not be opened,\ne.g. when no tty is attached to the process, it runs detached in the background, etc\n This is represented by the `Term` Kind\n","sig":null,"attributes":[{"value":"/TermLogger initialization might also fail if stdout or stderr could not be opened,","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":33375,"byte_end":33460,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/e.g. when no tty is attached to the process, it runs detached in the background, etc","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":33465,"byte_end":33552,"line_start":25,"line_end":25,"column_start":5,"column_end":92}},{"value":"/ This is represented by the `Term` Kind","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":33557,"byte_end":33599,"line_start":26,"line_end":26,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":544},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":33246,"byte_end":33258,"line_start":20,"line_end":20,"column_start":10,"column_end":22},"name":"TermLogError","qualname":"::loggers::termlog::TermLogError","value":"pub enum TermLogError { SetLogger(SetLoggerError), Term, }","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":548}],"decl_id":null,"docs":" TermLogger error type.\n","sig":null,"attributes":[{"value":"/ TermLogger error type.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":33193,"byte_end":33219,"line_start":18,"line_end":18,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":553},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":34849,"byte_end":34855,"line_start":83,"line_end":83,"column_start":5,"column_end":11},"name":"Stdout","qualname":"::loggers::termlog::TerminalMode::Stdout","value":"TerminalMode::Stdout","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Only use Stdout\n","sig":null,"attributes":[{"value":"/ Only use Stdout","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":34825,"byte_end":34844,"line_start":82,"line_end":82,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":555},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":34885,"byte_end":34891,"line_start":85,"line_end":85,"column_start":5,"column_end":11},"name":"Stderr","qualname":"::loggers::termlog::TerminalMode::Stderr","value":"TerminalMode::Stderr","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Only use Stderr\n","sig":null,"attributes":[{"value":"/ Only use Stderr","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":34861,"byte_end":34880,"line_start":84,"line_end":84,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":557},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":34948,"byte_end":34953,"line_start":87,"line_end":87,"column_start":5,"column_end":10},"name":"Mixed","qualname":"::loggers::termlog::TerminalMode::Mixed","value":"TerminalMode::Mixed","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Use Stderr for Errors and Stdout otherwise\n","sig":null,"attributes":[{"value":"/ Use Stderr for Errors and Stdout otherwise","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":34897,"byte_end":34943,"line_start":86,"line_end":86,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":552},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":34806,"byte_end":34818,"line_start":81,"line_end":81,"column_start":10,"column_end":22},"name":"TerminalMode","qualname":"::loggers::termlog::TerminalMode","value":"pub enum TerminalMode { Stdout, Stderr, Mixed, }","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":555},{"krate":0,"index":557}],"decl_id":null,"docs":" Specifies which streams should be used when logging\n","sig":null,"attributes":[{"value":"/ Specifies which streams should be used when logging","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":34690,"byte_end":34745,"line_start":79,"line_end":79,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":326},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":35182,"byte_end":35192,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"TermLogger","qualname":"::loggers::termlog::TermLogger","value":"TermLogger {  }","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329}],"decl_id":null,"docs":" The TermLogger struct. Provides a stderr/out based Logger implementation","sig":null,"attributes":[{"value":"/ The TermLogger struct. Provides a stderr/out based Logger implementation","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":35062,"byte_end":35138,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":35139,"byte_end":35142,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Supports colored output","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":35143,"byte_end":35170,"line_start":98,"line_end":98,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":36548,"byte_end":36552,"line_start":133,"line_end":133,"column_start":12,"column_end":16},"name":"init","qualname":"<TermLogger>::init","value":"pub fn init(LevelFilter, Config, TerminalMode) -> Result<(), TermLogError>","parent":null,"children":[],"decl_id":null,"docs":" init function. Globally initializes the TermLogger as the one and only used log facility.","sig":null,"attributes":[{"value":"/ init function. Globally initializes the TermLogger as the one and only used log facility.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":35299,"byte_end":35392,"line_start":106,"line_end":106,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":35397,"byte_end":35400,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Takes the desired `Level` and `Config` as arguments. They cannot be changed later on.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":35405,"byte_end":35494,"line_start":108,"line_end":108,"column_start":5,"column_end":94}},{"value":"/ Fails if another Logger was already initialized or if a terminal couldn't be opened.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":35499,"byte_end":35587,"line_start":109,"line_end":109,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":35592,"byte_end":35595,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Workaround the latter by either","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":35600,"byte_end":35635,"line_start":111,"line_end":111,"column_start":5,"column_end":40}},{"value":"/ - panic'ing (not recommended). e.g. `TermLogger::init(LevelFilter::Warn, Config::default(), TerminalMode::Mixed).unwrap()`","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":35640,"byte_end":35766,"line_start":112,"line_end":112,"column_start":5,"column_end":131}},{"value":"/ - silently ignoring (little better). e.g. `let _ = TermLogger::init(LevelFilter::Warn, Config::default(), TerminalMode::Mixed);`","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":35771,"byte_end":35903,"line_start":113,"line_end":113,"column_start":5,"column_end":137}},{"value":"/ - falling back:","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":35908,"byte_end":35927,"line_start":114,"line_end":114,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":35932,"byte_end":35939,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ # extern crate simplelog;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":35944,"byte_end":35973,"line_start":116,"line_end":116,"column_start":5,"column_end":34}},{"value":"/ # use simplelog::*;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":35978,"byte_end":36001,"line_start":117,"line_end":117,"column_start":5,"column_end":28}},{"value":"/ # fn main() {","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":36006,"byte_end":36023,"line_start":118,"line_end":118,"column_start":5,"column_end":22}},{"value":"/ if let Err(_) = TermLogger::init(LevelFilter::Warn, Config::default(), TerminalMode::Mixed) {","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":36028,"byte_end":36125,"line_start":119,"line_end":119,"column_start":5,"column_end":102}},{"value":"/     SimpleLogger::init(LevelFilter::Warn, Config::default()).expect(\"No logger should be already set\")","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":36130,"byte_end":36236,"line_start":120,"line_end":120,"column_start":5,"column_end":111}},{"value":"/ }","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":36241,"byte_end":36246,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":36251,"byte_end":36258,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":36263,"byte_end":36270,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":36275,"byte_end":36278,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":36283,"byte_end":36297,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":36302,"byte_end":36309,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ # extern crate simplelog;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":36314,"byte_end":36343,"line_start":127,"line_end":127,"column_start":5,"column_end":34}},{"value":"/ # use simplelog::*;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":36348,"byte_end":36371,"line_start":128,"line_end":128,"column_start":5,"column_end":28}},{"value":"/ # fn main() {","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":36376,"byte_end":36393,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ TermLogger::init(LevelFilter::Info, Config::default(), TerminalMode::Mixed).expect(\"No interactive terminal\");","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":36398,"byte_end":36512,"line_start":130,"line_end":130,"column_start":5,"column_end":119}},{"value":"/ # }","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":36517,"byte_end":36524,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":36529,"byte_end":36536,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":38401,"byte_end":38404,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<TermLogger>::new","value":"pub fn new(LevelFilter, Config, TerminalMode) -> Option<Box<TermLogger>>","parent":null,"children":[],"decl_id":null,"docs":" allows to create a new logger, that can be independently used, no matter whats globally set.","sig":null,"attributes":[{"value":"/ allows to create a new logger, that can be independently used, no matter whats globally set.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":36853,"byte_end":36949,"line_start":144,"line_end":144,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":36954,"byte_end":36957,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ no macros are provided for this case and you probably","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":36962,"byte_end":37019,"line_start":146,"line_end":146,"column_start":5,"column_end":62}},{"value":"/ dont want to use this function, but `init()`, if you dont want to build a `CombinedLogger`.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":37024,"byte_end":37119,"line_start":147,"line_end":147,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":37124,"byte_end":37127,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Takes the desired `Level` and `Config` as arguments. They cannot be changed later on.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":37132,"byte_end":37221,"line_start":149,"line_end":149,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":37226,"byte_end":37229,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Returns a `Box`ed TermLogger, or None if a terminal couldn't be opened.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":37234,"byte_end":37309,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/ Workaround this by either","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":37314,"byte_end":37343,"line_start":152,"line_end":152,"column_start":5,"column_end":34}},{"value":"/ - panic'ing (not recommended). e.g. `TermLogger::new(LevelFilter::Warn, Config::default(), TerminalMode::Mixed).unwrap()`","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":37348,"byte_end":37473,"line_start":153,"line_end":153,"column_start":5,"column_end":130}},{"value":"/ - silently ignoring (little better). e.g. `if let Some(logger) = TermLogger::new(LevelFilter::Warn, Config::default(), TerminalMode::Mixed) { /*...*/ }`","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":37478,"byte_end":37634,"line_start":154,"line_end":154,"column_start":5,"column_end":161}},{"value":"/ - falling back:","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":37639,"byte_end":37658,"line_start":155,"line_end":155,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":37663,"byte_end":37670,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ # extern crate simplelog;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":37675,"byte_end":37704,"line_start":157,"line_end":157,"column_start":5,"column_end":34}},{"value":"/ # use simplelog::*;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":37709,"byte_end":37732,"line_start":158,"line_end":158,"column_start":5,"column_end":28}},{"value":"/ # fn main() {","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":37737,"byte_end":37754,"line_start":159,"line_end":159,"column_start":5,"column_end":22}},{"value":"/ let mut multiple = vec![];","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":37759,"byte_end":37789,"line_start":160,"line_end":160,"column_start":5,"column_end":35}},{"value":"/ match TermLogger::new(LevelFilter::Warn, Config::default(), TerminalMode::Mixed) {","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":37794,"byte_end":37880,"line_start":161,"line_end":161,"column_start":5,"column_end":91}},{"value":"/     Some(logger) => multiple.push(logger as Box<dyn SharedLogger>),","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":37885,"byte_end":37956,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/     None => multiple.push(SimpleLogger::new(LevelFilter::Warn, Config::default())),","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":37961,"byte_end":38048,"line_start":163,"line_end":163,"column_start":5,"column_end":92}},{"value":"/ }","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":38053,"byte_end":38058,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ // Add more ...","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":38063,"byte_end":38082,"line_start":165,"line_end":165,"column_start":5,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":38087,"byte_end":38094,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":38099,"byte_end":38106,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":38111,"byte_end":38114,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":38119,"byte_end":38133,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":38138,"byte_end":38145,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/ # extern crate simplelog;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":38150,"byte_end":38179,"line_start":171,"line_end":171,"column_start":5,"column_end":34}},{"value":"/ # use simplelog::*;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":38184,"byte_end":38207,"line_start":172,"line_end":172,"column_start":5,"column_end":28}},{"value":"/ # fn main() {","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":38212,"byte_end":38229,"line_start":173,"line_end":173,"column_start":5,"column_end":22}},{"value":"/ let term_logger = TermLogger::new(LevelFilter::Info, Config::default(), TerminalMode::Mixed).expect(\"No interactive terminal\");","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":38234,"byte_end":38365,"line_start":174,"line_end":174,"column_start":5,"column_end":136}},{"value":"/ # }","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":38370,"byte_end":38377,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":38382,"byte_end":38389,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":390},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":43377,"byte_end":43388,"line_start":17,"line_end":17,"column_start":12,"column_end":23},"name":"WriteLogger","qualname":"::loggers::writelog::WriteLogger","value":"WriteLogger {  }","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"decl_id":null,"docs":" The WriteLogger struct. Provides a Logger implementation for structs implementing `Write`, e.g. File\n","sig":null,"attributes":[{"value":"/ The WriteLogger struct. Provides a Logger implementation for structs implementing `Write`, e.g. File","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":43261,"byte_end":43365,"line_start":16,"line_end":16,"column_start":1,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":44114,"byte_end":44118,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"init","qualname":"<WriteLogger<W>>::init","value":"pub fn init(LevelFilter, Config, W) -> Result<(), SetLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" init function. Globally initializes the WriteLogger as the one and only used log facility.","sig":null,"attributes":[{"value":"/ init function. Globally initializes the WriteLogger as the one and only used log facility.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":43542,"byte_end":43636,"line_start":24,"line_end":24,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":43641,"byte_end":43644,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Takes the desired `Level`, `Config` and `Write` struct as arguments. They cannot be changed later on.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":43649,"byte_end":43754,"line_start":26,"line_end":26,"column_start":5,"column_end":110}},{"value":"/ Fails if another Logger was already initialized.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":43759,"byte_end":43811,"line_start":27,"line_end":27,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":43816,"byte_end":43819,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":43824,"byte_end":43838,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":43843,"byte_end":43850,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ # extern crate simplelog;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":43855,"byte_end":43884,"line_start":31,"line_end":31,"column_start":5,"column_end":34}},{"value":"/ # use simplelog::*;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":43889,"byte_end":43912,"line_start":32,"line_end":32,"column_start":5,"column_end":28}},{"value":"/ # use std::fs::File;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":43917,"byte_end":43941,"line_start":33,"line_end":33,"column_start":5,"column_end":29}},{"value":"/ # fn main() {","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":43946,"byte_end":43963,"line_start":34,"line_end":34,"column_start":5,"column_end":22}},{"value":"/ let _ = WriteLogger::init(LevelFilter::Info, Config::default(), File::create(\"my_rust_bin.log\").unwrap());","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":43968,"byte_end":44078,"line_start":35,"line_end":35,"column_start":5,"column_end":115}},{"value":"/ # }","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":44083,"byte_end":44090,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":44095,"byte_end":44102,"line_start":37,"line_end":37,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":45027,"byte_end":45030,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<WriteLogger<W>>::new","value":"pub fn new(LevelFilter, Config, W) -> Box<WriteLogger<W>>","parent":null,"children":[],"decl_id":null,"docs":" allows to create a new logger, that can be independently used, no matter what is globally set.","sig":null,"attributes":[{"value":"/ allows to create a new logger, that can be independently used, no matter what is globally set.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":44329,"byte_end":44427,"line_start":43,"line_end":43,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":44432,"byte_end":44435,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ no macros are provided for this case and you probably","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":44440,"byte_end":44497,"line_start":45,"line_end":45,"column_start":5,"column_end":62}},{"value":"/ dont want to use this function, but `init()`, if you dont want to build a `CombinedLogger`.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":44502,"byte_end":44597,"line_start":46,"line_end":46,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":44602,"byte_end":44605,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Takes the desired `Level`, `Config` and `Write` struct as arguments. They cannot be changed later on.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":44610,"byte_end":44715,"line_start":48,"line_end":48,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":44720,"byte_end":44723,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":44728,"byte_end":44742,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":44747,"byte_end":44754,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"/ # extern crate simplelog;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":44759,"byte_end":44788,"line_start":52,"line_end":52,"column_start":5,"column_end":34}},{"value":"/ # use simplelog::*;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":44793,"byte_end":44816,"line_start":53,"line_end":53,"column_start":5,"column_end":28}},{"value":"/ # use std::fs::File;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":44821,"byte_end":44845,"line_start":54,"line_end":54,"column_start":5,"column_end":29}},{"value":"/ # fn main() {","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":44850,"byte_end":44867,"line_start":55,"line_end":55,"column_start":5,"column_end":22}},{"value":"/ let file_logger = WriteLogger::new(LevelFilter::Info, Config::default(), File::create(\"my_rust_bin.log\").unwrap());","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":44872,"byte_end":44991,"line_start":56,"line_end":56,"column_start":5,"column_end":124}},{"value":"/ # }","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":44996,"byte_end":45003,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":45008,"byte_end":45015,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":474},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1759,"byte_end":1771,"line_start":45,"line_end":45,"column_start":11,"column_end":23},"name":"SharedLogger","qualname":"::SharedLogger","value":"SharedLogger: Log","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477}],"decl_id":null,"docs":" Trait to have a common interface to obtain the Level of Loggers","sig":null,"attributes":[{"value":"/ Trait to have a common interface to obtain the Level of Loggers","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1600,"byte_end":1667,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1668,"byte_end":1671,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Necessary for CombinedLogger to calculate","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1672,"byte_end":1717,"line_start":42,"line_end":42,"column_start":1,"column_end":46}},{"value":"/ the lowest used Level.","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1718,"byte_end":1744,"line_start":43,"line_end":43,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1745,"byte_end":1748,"line_start":44,"line_end":44,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":2105,"byte_end":2110,"line_start":58,"line_end":58,"column_start":8,"column_end":13},"name":"level","qualname":"::SharedLogger::level","value":"pub fn level(&Self) -> LevelFilter","parent":{"krate":0,"index":474},"children":[],"decl_id":null,"docs":" Returns the set Level for this Logger","sig":null,"attributes":[{"value":"/ Returns the set Level for this Logger","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1783,"byte_end":1824,"line_start":46,"line_end":46,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1829,"byte_end":1832,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1837,"byte_end":1851,"line_start":48,"line_end":48,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1856,"byte_end":1859,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1864,"byte_end":1871,"line_start":50,"line_end":50,"column_start":5,"column_end":12}},{"value":"/ # extern crate simplelog;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1876,"byte_end":1905,"line_start":51,"line_end":51,"column_start":5,"column_end":34}},{"value":"/ # use simplelog::*;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1910,"byte_end":1933,"line_start":52,"line_end":52,"column_start":5,"column_end":28}},{"value":"/ # fn main() {","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1938,"byte_end":1955,"line_start":53,"line_end":53,"column_start":5,"column_end":22}},{"value":"/ let logger = SimpleLogger::new(LevelFilter::Info, Config::default());","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1960,"byte_end":2033,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ println!(\"{}\", logger.level());","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":2038,"byte_end":2073,"line_start":55,"line_end":55,"column_start":5,"column_end":40}},{"value":"/ # }","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":2078,"byte_end":2085,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":2090,"byte_end":2097,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":2549,"byte_end":2555,"line_start":74,"line_end":74,"column_start":8,"column_end":14},"name":"config","qualname":"::SharedLogger::config","value":"pub fn config(&Self) -> Option<&Config>","parent":{"krate":0,"index":474},"children":[],"decl_id":null,"docs":" Inspect the config of a running Logger","sig":null,"attributes":[{"value":"/ Inspect the config of a running Logger","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":2139,"byte_end":2181,"line_start":60,"line_end":60,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":2186,"byte_end":2189,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ An Option is returned, because some Logger may not contain a Config","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":2194,"byte_end":2265,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":2270,"byte_end":2273,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":2278,"byte_end":2292,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":2297,"byte_end":2300,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":2305,"byte_end":2312,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"/ # extern crate simplelog;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":2317,"byte_end":2346,"line_start":67,"line_end":67,"column_start":5,"column_end":34}},{"value":"/ # use simplelog::*;","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":2351,"byte_end":2374,"line_start":68,"line_end":68,"column_start":5,"column_end":28}},{"value":"/ # fn main() {","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":2379,"byte_end":2396,"line_start":69,"line_end":69,"column_start":5,"column_end":22}},{"value":"/ let logger = SimpleLogger::new(LevelFilter::Info, Config::default());","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":2401,"byte_end":2474,"line_start":70,"line_end":70,"column_start":5,"column_end":78}},{"value":"/ println!(\"{:?}\", logger.config());","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":2479,"byte_end":2517,"line_start":71,"line_end":71,"column_start":5,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":2522,"byte_end":2529,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":2534,"byte_end":2541,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":2640,"byte_end":2646,"line_start":77,"line_end":77,"column_start":8,"column_end":14},"name":"as_log","qualname":"::SharedLogger::as_log","value":"pub fn as_log(Box<Self>) -> Box<dyn Log>","parent":{"krate":0,"index":474},"children":[],"decl_id":null,"docs":" Returns the logger as a Log trait object\n","sig":null,"attributes":[{"value":"/ Returns the logger as a Log trait object","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":2588,"byte_end":2632,"line_start":76,"line_end":76,"column_start":5,"column_end":49}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":13163,"byte_end":13176,"line_start":82,"line_end":82,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":19018,"byte_end":19024,"line_start":237,"line_end":237,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":20852,"byte_end":20866,"line_start":21,"line_end":21,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":23613,"byte_end":23627,"line_start":92,"line_end":92,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":24043,"byte_end":24057,"line_start":112,"line_end":112,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":30104,"byte_end":30116,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":31648,"byte_end":31660,"line_start":68,"line_end":68,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":32539,"byte_end":32551,"line_start":98,"line_end":98,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":33635,"byte_end":33647,"line_start":30,"line_end":30,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":33832,"byte_end":33844,"line_start":38,"line_end":38,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":34222,"byte_end":34234,"line_start":54,"line_end":54,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":34409,"byte_end":34420,"line_start":65,"line_end":65,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":34975,"byte_end":34987,"line_start":90,"line_end":90,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":35282,"byte_end":35292,"line_start":105,"line_end":105,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":340},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":42053,"byte_end":42063,"line_start":284,"line_end":284,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":42438,"byte_end":42448,"line_start":300,"line_end":300,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":43521,"byte_end":43532,"line_start":23,"line_end":23,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":45302,"byte_end":45313,"line_start":68,"line_end":68,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":45793,"byte_end":45804,"line_start":85,"line_end":85,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":13163,"byte_end":13176,"line_start":82,"line_end":82,"column_start":6,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/config.rs","byte_start":19018,"byte_end":19024,"line_start":237,"line_end":237,"column_start":18,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":519},"to":{"krate":2,"index":2799}},{"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":20852,"byte_end":20866,"line_start":21,"line_end":21,"column_start":6,"column_end":20},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":98},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":23613,"byte_end":23627,"line_start":92,"line_end":92,"column_start":14,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":98},"to":{"krate":18,"index":160}},{"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/comblog.rs","byte_start":24043,"byte_end":24057,"line_start":112,"line_end":112,"column_start":23,"column_end":37},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":98},"to":{"krate":0,"index":474}},{"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":30104,"byte_end":30116,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":31648,"byte_end":31660,"line_start":68,"line_end":68,"column_start":14,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":211},"to":{"krate":18,"index":160}},{"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/simplelog.rs","byte_start":32539,"byte_end":32551,"line_start":98,"line_end":98,"column_start":23,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":211},"to":{"krate":0,"index":474}},{"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":33635,"byte_end":33647,"line_start":30,"line_end":30,"column_start":23,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":544},"to":{"krate":2,"index":8728}},{"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":33832,"byte_end":33844,"line_start":38,"line_end":38,"column_start":23,"column_end":35},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":34222,"byte_end":34234,"line_start":54,"line_end":54,"column_start":31,"column_end":43},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":544},"to":{"krate":2,"index":2727}},{"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":34409,"byte_end":34420,"line_start":65,"line_end":65,"column_start":6,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":34975,"byte_end":34987,"line_start":90,"line_end":90,"column_start":18,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":552},"to":{"krate":2,"index":2799}},{"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":35282,"byte_end":35292,"line_start":105,"line_end":105,"column_start":6,"column_end":16},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":42053,"byte_end":42063,"line_start":284,"line_end":284,"column_start":14,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":326},"to":{"krate":18,"index":160}},{"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/termlog.rs","byte_start":42438,"byte_end":42448,"line_start":300,"line_end":300,"column_start":23,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":326},"to":{"krate":0,"index":474}},{"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":43521,"byte_end":43532,"line_start":23,"line_end":23,"column_start":33,"column_end":44},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":45302,"byte_end":45313,"line_start":68,"line_end":68,"column_start":41,"column_end":52},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":390},"to":{"krate":18,"index":160}},{"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/loggers/writelog.rs","byte_start":45793,"byte_end":45804,"line_start":85,"line_end":85,"column_start":50,"column_end":61},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":390},"to":{"krate":0,"index":474}},{"span":{"file_name":"/home/cb/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.7.6/src/lib.rs","byte_start":1773,"byte_end":1776,"line_start":45,"line_end":45,"column_start":25,"column_end":28},"kind":"SuperTrait","from":{"krate":18,"index":160},"to":{"krate":0,"index":474}}]}